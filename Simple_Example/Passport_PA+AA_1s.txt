# Passive and Active Authentification
# We test the anonimity of PA|AA for one session (one session with a compromised passport + 1 normal session)
# SHOULD BE TRUE


free c.
#first session
free c1.
free cp1p.
free cp1a.
free cr1p.
free cr1a.
#second session
free c2.
free cp2p.
free cp2a.
free cr2p.
free cr2a.

fun h/1.
fun mac/2.
fun read/0.
fun init/0.
fun ok/0.

fun dg1/0.
fun dg2/0.
fun dg3/0.
fun dgA/0.
fun skP1/0.
fun skP2/0.
fun skP3/0.
fun skPA/0.

# Description of the different roles.

let PApassport ksenc ksmac dg sod c = 
  in(c, x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let xread = sdec(xenc,ksenc) in
    if xread = read
    then
      let menc = senc((dg, sod),ksenc) in
      let mmac = mac(menc,ksmac) in
      out(c, (menc,mmac))
    else 0
  else 0.

let PAreader KPrDS ksenc ksmac c =
  let menc = senc(read,ksenc) in
  let mmac = mac(menc,ksmac) in
  in(c,zz);
  out(c, (menc, mmac));
  in(c,x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then(let (xdg,xsod) = sdec(xenc,ksenc) in
       let (xhdg, xshdg) = xsod in
       if xshdg = checksign(xshdg, (pk(KPrDS)))
       then (if xhdg = h(xdg)
             then out(c, ok)
             else 0)
       else 0)
  else 0.
  
let AApassport ksenc ksmac skP c = 
  in(c, x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let (xinit, xrnd) = sdec(xenc,ksenc) in
    if xinit = init
    then
      new nce;
      let sigma = sign((nce,xrnd),skP) in
      let menc = senc(sigma,ksenc) in
      let mmac = mac(menc,ksmac) in
      out(c, (menc,mmac))
    else 0
  else 0.

let AAreader ksenc ksmac pkP c =
  new rnd;
  let menc = senc((init,rnd),ksenc) in
  let mmac = mac(menc,ksmac) in
  in(c,zz);
  out(c, (menc, mmac));
  in(c,x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let (xnce, xrnd) = sdec(xenc,ksenc) in
    if xrnd = rnd
    then out(c,ok)
    else 0
  else 0.

let ePassport KPrDS dg skP ksenc ksmac cp1p cr1p cp1a cr1a =
  let sod = (h(dg), sign(h(dg),KPrDS)) in
  ((PAreader KPrDS ksenc ksmac cr1p | PApassport ksenc ksmac dg sod cp1p) 
 |
  (AAreader ksenc ksmac pk(skP) cr1a | AApassport ksenc ksmac skP cp1a)).

# Main systems.
let wholeSystem dg1 dg2 sk1 sk2 = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
      	    #The leak of the compromised passport
  new ksenc;
  new ksmac;
  in(c,zz);
  out(c,KPuDS);
  ((ePassport KPrDS dg1 sk1 ksenc ksmac cp1p cr1p cp1a cr1a)
 |
   (ePassport KPrDS dg2 sk2 ksenc ksmac cp2p cr2p cp2a cr2a)).

equivalence (
wholeSystem dg1 dg2 skP1 skP2
) and (
wholeSystem dg1 dgA skP1 skPA
).
