# Passive access control
# We define a generic P|R for PA and test anonymity of Passport
# SHOULD BE TRUE

free c.
free cp1.
free cp2.
free cp3.
free cr1.
free cr2.
free cr3.

fun h/1.
fun mac/2.
fun init/0.
fun ok/0.

fun skP1/0.
fun skP2/0.
fun skP3/0.
fun skP4/0.
fun skPA/0.

# Description of the different roles.

let AApassport ksenc ksmac skP c = 
  in(c, x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let (xinit, xrnd) = sdec(xenc,ksenc) in
    if xinit = init
    then
      new nce;
      let sigma = sign((nce,xrnd),skP) in
      let menc = senc(sigma,ksenc) in
      let mmac = mac(menc,ksmac) in
      out(c, (menc,mmac))
    else 0
  else 0.

let AAreader ksenc ksmac pkP c =
  new rnd;
  let menc = senc((init,rnd),ksenc) in
  let mmac = mac(menc,ksmac) in
  in(c,zz);
  out(c, (menc, mmac));
  in(c,x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let (xnce, xrnd) = sdec(xenc,ksenc) in
    if xrnd = rnd
    then out(c,ok)
    else 0
  else 0.

let ePassportAA KPrDS skP cp cr ksenc ksmac =
  (AAreader ksenc ksmac pk(skP) cr | AApassport ksenc ksmac skP cp).
    
# Main systems.
let wholeSystem = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
  in(c,zz);
  out(c,KPuDS);
  new ksenc; new ksmac;
  ((ePassportAA KPrDS skP1 cp1 cr1 ksenc ksmac) |
   (ePassportAA KPrDS skPA cp2 cr2 ksenc ksmac) |
   (ePassportAA KPrDS skP3 cp3 cr3 ksenc ksmac)).


let wholeSystem_A = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
  in(c,zz);
  out(c,KPuDS);
  new ksenc; new ksmac;
  ((ePassportAA KPrDS skP1 cp1 cr1 ksenc ksmac) |
   (ePassportAA KPrDS skPA cp2 cr2 ksenc ksmac) |
   (ePassportAA KPrDS skP3 cp3 cr3 ksenc ksmac)).

equivalence wholeSystem and wholeSystem_A.
