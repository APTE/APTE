free c.
free cp1.
free cp2.
free cr1.
free cr2.

fun h/1.
fun mac/2.
fun read/0.

fun dg_1/0.
fun dg_2/0.

# Description of the different roles.

let PApassport ksenc ksmac dg sod c = 
  in(c, x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let xread = sdec(xenc,ksenc) in
    
    if xread = read
    then
      let menc = senc((dg, sod),ksenc) in
      let mmac = mac(menc,ksmac) in
      out(c, (menc,mmac))
    else 0
  else 0.

let PAreader ksenc ksmac c =
  let menc = senc(read,ksenc) in
  let mmac = mac(menc,ksmac) in
  in(c,zz);
  out(c, (menc, mmac)).

let ePassport KPrDS dg c cc=
  let sod = (h(dg), sign(h(dg),KPrDS)) in
  new ksenc;
  new ksmac;
  (PAreader ksenc ksmac c | PApassport ksenc ksmac dg sod cc).
    
# Main systems.

let system1 = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
  in(c,zz);
  out(c,KPuDS);
  let sod1 = (h(dg_1), sign(h(dg_1),KPrDS)) in
  new ksenc1;
  new ksmac1;
  let sod2 = (h(dg_2), sign(h(dg_2),KPrDS)) in
  new ksenc2;
  new ksmac2;
  ((
  ((PAreader ksenc1 ksmac1 cp1 | PApassport ksenc1 ksmac1 dg_1 sod1 cr1))
  )|(
  ((PAreader ksenc2 ksmac2 cp2 | PApassport ksenc2 ksmac2 dg_2 sod2 cr2))
  )).

let system2 = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
  in(c,zz);
  out(c,KPuDS);
  let sod1 = (h(dg_1), sign(h(dg_1),KPrDS)) in
  new ksenc1;
  new ksmac1;
  let sod2 = (h(dg_2), sign(h(dg_2),KPrDS)) in
  new ksenc2;
  new ksmac2;
  ((
  ((PAreader ksenc1 ksmac1 cp1 | PApassport ksenc1 ksmac1 dg_1 sod1 cr1))
  )|(
  ((PAreader ksenc2 ksmac2 cp2 | PApassport ksenc2 ksmac2 dg_1 sod2 cr2))
  )).


 
equivalence system1 and system2.
