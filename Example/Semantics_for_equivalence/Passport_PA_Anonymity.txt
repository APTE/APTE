free c.
free c_1.
free c_2.

fun h/1.
fun mac/2.
fun read/0.

fun dg_1/0.
fun dg_2/0.
fun dg_3/0.

# Description of the different roles.

let PApassport ksenc ksmac dg sod = 
  in(c_1, x);
  let (xenc, xmac) = x in 
  if xmac = mac(xenc, ksmac) 
  then
    let xread = sdec(xenc,ksenc) in
    
    if xread = read
    then
      let menc = senc((dg, sod),ksenc) in
      let mmac = mac(menc,ksmac) in
      out(c_2, (menc,mmac))
    else 0
  else 0.

let PAreader ksenc ksmac = 
  let menc = senc(read,ksenc) in
  let mmac = mac(menc,ksmac) in
  out(c_1, (menc, mmac)).

let ePassport KPrDS dg =
  let sod = (h(dg), sign(h(dg),KPrDS)) in
  new ksenc; 
  new ksmac;
  (PAreader ksenc ksmac | PApassport ksenc ksmac dg sod).
    
# Main systems.

let system1 = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
  out(c,KPuDS);
  (ePassport KPrDS dg_1 | ePassport KPrDS dg_2).

let system2 = 
  new KPrDS;
  let KPuDS = pk(KPrDS) in
  out(c,KPuDS);
  (ePassport KPrDS dg_1 | ePassport KPrDS dg_3).

 
equivalence system1 and system2.
