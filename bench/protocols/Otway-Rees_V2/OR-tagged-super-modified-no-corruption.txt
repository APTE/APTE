# Otway Rees
#
# 1.  	A	->	B	 :  	 M, A, B
# 1' .        A      ->   S        :      {1,Na, M, A, B}Kas
# 2.  	B	->	S	 :  	 A, B, {2,Nb, M, A, B}Kbs
# 3.  	S	->	B	 :  	{4, Nb, Kab}Kbs
 #3'.         S      ->    A       :      {3, Na, Kab}Kas
# Strong secrecy of Kab
# 6.  A      ->     : {m1}Kab versus {m2}K with K fresh

free a.
free b.

free ca.
free cb.
free cs.

free t1.
free t2.
free t3.
free t4.

free start.
free m1.
free m2.




#######################################
#    Description of role A played:
# - on channel ca
# - by a with key kas (shared with the server S)
# - with responder b
#######################################

let processAreal ca a kas b =
  in(ca,x);
  if x = start then  
  new m; new na;
  out(ca,(m,(a,b))); out(ca,senc((t1,(na,(m,(a,b)))),kas));
  in(ca,xas);
  let (xt3,(xna,xkab)) = sdec(xas,kas) in
  if xt3 = t3 && xna = na then
    out(ca,senc(m1,xkab)).


let processAideal ca a kas b =
  in(ca,x);
  if x = start then  
  new m; new na;
  out(ca,(m,(a,b))); out(ca,senc((t1,(na,(m,(a,b)))),kas));
  in(ca,xas);
  let (xt3,(xna,xkab)) = sdec(xas,kas) in
  if xt3 = t3 && xna = na then
     new k;
    out(ca,senc(m2,k)).

#######################################
#    Description of role B played:    
# - on channel cb
# - by b with key kbs (shared with the server S)
# - with initiator a
#######################################

let processB cb b kbs a  =
  in(cb,yb1);
  let (ym,(ya, yb))= yb1 in
  if ya = a && yb = b then
    new nb;
    out(cb,(a,(b,senc((t2, (nb,(ym,(a,b)))),kbs))));
    in(cb,yb2b);
    let (yt4,(ynb,ykab)) = sdec(yb2b,kbs) in
    	if yt4 = t4 && ynb = nb then 0.

#######################################
#    Description of role S played:    
# - on channel cs
# - to answer a request coming from a (with key kas) 
# - who wants to communicate with b (with key kbs) 
#######################################

let processS cs a kas b kbs =
	in(cs,zs1); 
	let (za,(zb,zas)) = zs1 in 
	if za =a && zb = b then
	let (zt1,(zna, (zm1, (za1, zb1)))) = sdec(zas,kas) in
	if zt1 = t1 && za1 = a && zb1  = b then 
	in(cs,zbs);
	let (zt2,(znb, (zm2, (za2, zb2)))) = sdec(zbs,kbs) in
	if zt2 = t2 && zm2 = zm1 && za2 = a && zb2  = b then
	new kab;
	out(cs,senc((t3,(zna,kab)),kas));
	out(cs,senc((t4,(znb,kab)),kbs)).

#######################################
#   			Main                  #
#######################################

let Preal = 
  new kas; new kbs; 
(processAreal ca a kas b|  processB  cb b kbs a | processS cs a kas b kbs).


let Pideal = 
  new kas; new kbs; 
( processAideal ca a kas b | processB  cb b kbs a  | processS cs a kas
  b kbs).

equivalence Preal and Pideal.
